<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.yaz4j</groupId>
    <artifactId>yaz4j-lib</artifactId>
    <version>1.6-SNAPSHOT</version>
  </parent>
  <groupId>org.yaz4j</groupId>
  <artifactId>libyaz4j</artifactId>
  <name>libyaz4j</name>
  <packaging>${packaging}</packaging>

  <build>
    <finalName>${project.artifactId}</finalName>
    <testSourceDirectory>../src/test/java</testSourceDirectory>

    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>write-yaz-config</id>
            <phase>initialize</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <exec executable="${yaz.config}" outputproperty="yaz.cflags">
                  <arg value="--cflags" />
                </exec>
                <echo message="YAZ CFLAGS: ${yaz.cflags}" />
                <exec executable="${yaz.config}" outputproperty="yaz.libs">
                  <arg value="--libs" />
                </exec>
                <echo message="YAZ LIBS: ${yaz.libs}" />
                <!-- this does not work on debian/ubuntu
                <propertyfile file="${basedir}/target/yaz-config.properties" comment="YAZ COMPILER/LINKER FLAGS">
                  <entry key="yaz.cflags" value="${yaz.cflags}" />
                  <entry key="yaz.libs" value="${yaz.libs}" />
                </propertyfile>
                -->
                <echo file="${basedir}/target/yaz-config.properties" message="yaz.cflags=${yaz.cflags}${line.separator}yaz.libs=${yaz.libs}" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-1</version>
        <executions>
          <execution>
            <id>read-yaz-config</id>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${basedir}/target/yaz-config.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>1.0-alpha-9</version>
        <extensions>true</extensions>       
        <configuration>         
          <javahOS>${javahOS}</javahOS>
          <jdkIncludePath>${jdkIncludePath}</jdkIncludePath>
          <compilerProvider>generic</compilerProvider>
          <compilerExecutable>g++</compilerExecutable>
          <compilerStartOptions>
            <compilerStartOption>-fPIC -Wno-deprecated-declarations</compilerStartOption>
          </compilerStartOptions>
          <compilerEndOptions>
            <compilerEndOption>${yaz.cflags}</compilerEndOption>
          </compilerEndOptions>
          <sources>
            <source>
              <includes>
                <include>**/*.cpp</include>
              </includes>
              <directory>../src/main/native</directory>
            </source>
            <source>
              <includes>
                <include>**/*.cpp</include>
              </includes>
              <directory>../target/generated-sources/native</directory>
            </source>
            <source>
              <directory>${java.home}/include</directory>
            </source>
            <source>
              <directory>${java.home}/include/linux</directory>
            </source>
          </sources>
          <linkerExecutable>g++</linkerExecutable>
          <linkerStartOptions>
            <linkerStartOption>-shared</linkerStartOption>
          </linkerStartOptions>
          <linkerEndOptions>
            <linkerEndOption>${yaz.libs}</linkerEndOption>
          </linkerEndOptions>
        </configuration>
      </plugin>

      <!-- this is to compile and execute tests, that are arch-dependent
       because they need to load so/dll -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.8</source>
          <target>1.8</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>include-generated-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals><goal>add-test-source</goal></goals>
            <configuration>
              <sources>
                <source>../src/main/java</source>
                <source>../target/generated-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <forkMode>once</forkMode>
          <workingDirectory>target</workingDirectory>
          <argLine>-Djava.library.path=${project.build.directory}</argLine>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>
    </plugins>    
  </build>
</project>
